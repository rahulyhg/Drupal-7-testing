<?php
/**
 * Implements hook_permission()
 */
function csv_impoter_permission() {
  return array(
    'administer uploader' => array(
      'title' => t('Administer Uploader'),
      'description' => t('Allow the following roles to upload csv files to the server.'),
    ),
  );
}
 
/**
 * Implements hook_menu()
 */
function csv_impoter_menu() {
  $items['import-csv-file'] = array(
    'title' => 'Upload a File',
    'type' => MENU_CALLBACK,
    'description' => 'Import a csv',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('csv_impoter_form'),
    'access arguments' => array('administer uploader'),
  );

  return $items;
}

/**
 * Builds a form that will allow users to upload csv files
 * 
 * @see
 *   hook_menu()
 */
function csv_impoter_form($form, $form_state) {

  $form['note'] = array(
    '#type' => 'fieldset',
    '#title' => t('Details for Uploding file'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

   $form['note']['notes'] = array(
    '#type' => 'markup',
    '#markup' => '<div class="import-notes">A few notes when uploading. <ul><li>Make sure the file is in a .csv format.</li><li>Columns should be in *,* order</li><li>Be sure to click the "Upload" button when you select a csv.</ul></div>',
    //'#upload_location' => 'public://tmp/',
    //</li><li>To download demo csv file format <a href="http://sandbox.vendordirectories.com/sites/default/files/demo.csv.zip">Click Here</li>
  );

  $form['import-file'] = array(
    '#type' => 'fieldset',
    '#title' => t('Import Csv File'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['import-file']['import'] = array(
    '#title' => t('Import'),
    '#type' => 'managed_file',
    '#description' => t('The uploaded csv will be imported and temporarily saved.'),
    '#upload_location' => 'public://tmp/',
    '#upload_validators' => array(
      'file_validate_extensions' => array('csv'),
    ),
  );

  #file upload button
  $form['import-file']['submit'] = array (
    '#type' => 'submit',
    '#value' => t('Import New List in Template'),
  );

  #file downolad button
  $form['import-file']['download'] = array(
    '#type' => 'submit', 
    '#value' => t('Download Demo Csv File'),
    '#submit' => array('download_demo_csv_file'),
  );

  $form['import-file']['taxonomy-list'] = array(
    '#type' => 'submit',
    '#value' => t('View Taxonomy List'),
    '#submit' => array('view_taxonomy_list'),
  );

  return $form;
}

/**
 * Submit handler for csv_impoter_import_form()
 */
function csv_impoter_form_submit($form, $form_state) {
  // Check to make sure that the file was uploaded to the server properly
  $uri = db_query("SELECT uri FROM {file_managed} WHERE fid = :fid", array(
    ':fid' => $form_state['input']['import']['fid'],
  ))->fetchField();
  if(!empty($uri)) {
    if(file_exists(drupal_realpath($uri))) { 
      // Open the csv
      $handle = fopen(drupal_realpath($uri), "r");
      // Go through each row in the csv and run a function on it. In this case we are parsing by '|' (pipe) characters.
      // If you want commas are any other character, replace the pipe with it.
	  $rec_count=FALSE; 
      while (($data = fgetcsv($handle, 0, ',', '"')) !== FALSE) {
	  if($rec_count) { //will pass first row of cvs file;
          $operations[] = array(
            'csv_impoter_batch_processing',  // The function to run on each row
            array($data),  // The row in the csv
          );
		}
		$rec_count=TRUE;
      }
 
      // Once everything is gathered and ready to be processed... well... process it!
      $batch = array(
        'title' => t('Importing CSV...'),
        'operations' => $operations,  // Runs all of the queued processes from the while loop above.
        'finished' => 'csv_impoter_form_finished', // Function to run when the import is successful
        'error_message' => t('The installation has encountered an error.'),
        'progress_message' => t('Imported @current of @total products.'),
      );
      batch_set($batch);
      fclose($handle);    
    }
  }
  else {
    drupal_set_message(t('There was an error uploading your file. Please contact a System administator.'), 'error');
  }
}

/**
 * This function runs the batch processing and creates nodes with then given information
 * @see
 * csv_impoter_import_form_submit()
 */
function csv_impoter_batch_processing($data) {
  // Lets make the variables more readable.

$term_id = $data[0];
$title = $data[1];
$cname = $data[1];
$url = $data[2];
$address1 = $data[3];
$address2 = $data[4];
$city = $data[5];
$state = $data[6];
$zip = $data[7];
$country = $data[8];
$phone = $data[9];
$fax = $data[10];
$email = $data[11];
$first_name = $data[12];
$last_name = $data[13];

$address = '';
if($address1){
  $address .= $address1.'<br />';
}if($address2){            
  $address .= $address2.'<br />'; 
}if($city){  
  $address .= $city.', ';
}if($state){  
  $address .= $state.' ';
}if($zip){  
  $address .= $zip.'<br />';
}if($fax){  
  $address .= $fax.'<br />';
}if($country){  
  $address .= $country; 
}


/**
 *Create User from mail where mail listed in CSV file.
 */    

  $query = db_select('users', 'u');
  $query
  ->condition('mail',$email)
  ->fields('u', array('mail'));
  $result = $query->execute();
   $rec = $result->fetchAssoc();
    if($rec['mail'] != $email){
       $newUser = array(
       'name' => $email,
       'pass' => '123456',
       'mail' => $email,
       'status' => 1,
       'roles' => array(2 => 'authenticated user'),
       );          
       user_save(null,$newUser);       
     }

  /* Find out if the node already exists by looking up its Company Name number. Each Company Name should be unique. You can use whatever you want.
  $nid = db_query("SELECT DISTINCT n.nid FROM {node} n " . 
    "INNER JOIN {field_data_field_company_name} s ON s.revision_id = n.vid AND s.entity_id = n.nid " .
    "WHERE field_company_name_value = :cname", array(
      ':cname' => $cname,
    ))->fetchField();
  if(!empty($nid)) {
    /*
    // The node exists! Load it.
    $node = node_load($nid);
    // Change the values. No need to update the Company Name though.
    $node->title = $title;
    $node->body['und'][0]['value'] = $address;
    $node->body['und'][0]['safe_value'] = check_plain($address);
    node_save($node);
    */
  /*}
  else {
    // The node does not exist! Create it.
    global $user;
    $node = new StdClass();
    $node->type = 'profile_your_basic_information'; // Choose your type
    $node->status = 1; // Sets to published automatically, 0 will be unpublished
    $node->title = $title;
    $node->uid = $user->uid;

    $node->body['und'][0]['value'] = $address;
    $node->body['und'][0]['format'] = 'full_html';
    $node->body['und'][0]['safe_value'] = check_plain($address);
    $node->language = 'und';

    $node->field_company_name['und'][0]['value'] = $cname;
    $node->field_company_name['und'][0]['safe_value'] = check_plain($cname);
	
    $node->field_company_web_site_url['und'][0]['value'] = $url;
    $node->field_company_web_site_url['und'][0]['safe_value'] = check_plain($url);
	
    $node->field__phone['und'][0]['value'] = $phone;
    $node->field__phone['und'][0]['safe_value'] = check_plain($phone);
		
    $node->field_e_mail['und'][0]['email'] = $email;
    node_save($node);
    $basic_nid = $node->nid;


    //About Your Company Node Creation
    $about_node = new StdClass();
    $about_node->type = 'profile_about_your_company'; // Choose your type
    $about_node->status = 1; // Sets to published automatically, 0 will be unpublished
    $about_node->title = $cname;
    $about_node->uid = $user->uid;
    $about_node->language = 'und';
    $about_node->field_about_your_type_of_c['und'][0]['tid'] = $term_id;
    $about_node->field_basic_information_ref['und'][0]['nid'] = $basic_nid;
    node_save($about_node);

  }*/
}

/**
 * This function runs when the batch processing is complete
 *
 * @see
 * csv_impoter_form_submit()
 */
function csv_impoter_form_finished() {
	drupal_set_message(t('Import Completed Successfully'));
}

/**
 *Download Demo Csv file Function
 */

function download_demo_csv_file() {  
$http_headers = array(
      'Content-Type' => 'application/vnd.ms-excel',
      'Content-Disposition' => 'attachment; filename="' . 'demo.csv' . '"',
  );
 return file_transfer('public://demo.csv',$http_headers);
}

function view_taxonomy_list() { 
  drupal_goto('taxonomy-excel-list');
}



